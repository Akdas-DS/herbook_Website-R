/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-400: oklch(.704 .191 22.216);
    --color-yellow-400: oklch(.852 .199 91.936);
    --color-teal-200: oklch(.91 .096 180.426);
    --color-teal-300: oklch(.855 .138 181.071);
    --color-teal-400: oklch(.777 .152 181.912);
    --color-teal-500: oklch(.704 .14 182.503);
    --color-teal-600: oklch(.6 .118 184.704);
    --color-teal-700: oklch(.511 .096 186.391);
    --color-teal-900: oklch(.386 .063 188.416);
    --color-teal-950: oklch(.277 .046 192.524);
    --color-purple-200: oklch(.902 .063 306.703);
    --color-purple-300: oklch(.827 .119 306.383);
    --color-purple-400: oklch(.714 .203 305.504);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-600: oklch(.558 .288 302.321);
    --color-purple-700: oklch(.496 .265 301.924);
    --color-purple-800: oklch(.438 .218 303.724);
    --color-purple-900: oklch(.381 .176 304.987);
    --color-purple-950: oklch(.291 .149 302.717);
    --color-slate-100: oklch(.968 .007 247.896);
    --color-slate-200: oklch(.929 .013 255.508);
    --color-slate-300: oklch(.869 .022 252.894);
    --color-slate-400: oklch(.704 .04 256.788);
    --color-slate-500: oklch(.554 .046 257.417);
    --color-slate-600: oklch(.446 .043 257.281);
    --color-slate-700: oklch(.372 .044 257.287);
    --color-slate-800: oklch(.279 .041 260.031);
    --color-slate-900: oklch(.208 .042 265.755);
    --color-slate-950: oklch(.129 .042 264.695);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-white: #fff;
    --spacing: .25rem;
    --container-md: 28rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-6xl: 72rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --blur-xl: 24px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  html {
    scroll-behavior: smooth;
  }

  :focus {
    outline: 2px solid oklch(.714 .203 305.504);
    outline-offset: 2px;
  }

  @keyframes mindFlow {
    0%, 100% {
      transform: translateY(0)rotate(0);
    }

    25% {
      transform: translateY(-10px)rotate(2deg);
    }

    50% {
      transform: translateY(-5px)rotate(-1deg);
    }

    75% {
      transform: translateY(-15px)rotate(1deg);
    }
  }

  @keyframes thoughtRipple {
    0% {
      opacity: .8;
      transform: scale(.95);
    }

    50% {
      opacity: 1;
      transform: scale(1.05);
    }

    100% {
      opacity: .8;
      transform: scale(.95);
    }
  }

  @keyframes synapseGlow {
    0%, 100% {
      box-shadow: 0 0 20px #a855f766;
    }

    50% {
      box-shadow: 0 0 30px #14b8a699, 0 0 40px #a855f74d;
    }
  }

  @keyframes neuralPulse {
    0%, 100% {
      opacity: .6;
      transform: scale(1);
    }

    50% {
      opacity: 1;
      transform: scale(1.1);
    }
  }

  @keyframes floatingThought {
    0%, 100% {
      transform: translateY(0)rotate(0);
    }

    33% {
      transform: translateY(-20px)rotate(2deg);
    }

    66% {
      transform: translateY(-10px)rotate(-1deg);
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }

    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }

    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes morphingButton {
    0%, 100% {
      border-radius: 25px;
      transform: scale(1)rotate(0);
    }

    25% {
      border-radius: 50px;
      transform: scale(1.05)rotate(2deg);
    }

    50% {
      border-radius: 15px;
      transform: scale(1.1)rotate(-1deg);
    }

    75% {
      border-radius: 35px;
      transform: scale(1.05)rotate(1deg);
    }
  }

  @keyframes zoomPulse {
    0%, 100% {
      transform: scale(1)perspective(1000px)rotateY(0);
    }

    50% {
      transform: scale(1.15)perspective(1000px)rotateY(5deg);
    }
  }

  @keyframes liquidMorph {
    0%, 100% {
      border-radius: 50% 30% 70% 40%;
      transform: rotate(0)scale(1);
    }

    25% {
      border-radius: 30% 60% 40% 70%;
      transform: rotate(90deg)scale(1.1);
    }

    50% {
      border-radius: 60% 40% 30% 60%;
      transform: rotate(180deg)scale(.9);
    }

    75% {
      border-radius: 40% 70% 60% 30%;
      transform: rotate(270deg)scale(1.05);
    }
  }

  @keyframes prismaticShift {
    0% {
      background: linear-gradient(45deg, #a855f7, #14b8a6);
      transform: perspective(1000px)rotateX(0)rotateY(0);
    }

    25% {
      background: linear-gradient(135deg, #14b8a6, #8b5cf6);
      transform: perspective(1000px)rotateX(10deg)rotateY(10deg);
    }

    50% {
      background: linear-gradient(225deg, #8b5cf6, #06b6d4);
      transform: perspective(1000px)rotateX(0)rotateY(20deg);
    }

    75% {
      background: linear-gradient(315deg, #06b6d4, #a855f7);
      transform: perspective(1000px)rotateX(-10deg)rotateY(10deg);
    }

    100% {
      background: linear-gradient(45deg, #a855f7, #14b8a6);
      transform: perspective(1000px)rotateX(0)rotateY(0);
    }
  }

  @keyframes magneticHover {
    0% {
      transform: translate(0)scale(1);
    }

    100% {
      transform: translate(var(--x, 0), var(--y, 0)) scale(1.1);
    }
  }

  @keyframes textGlitch {
    0%, 100% {
      filter: hue-rotate();
      transform: translate(0);
    }

    20% {
      filter: hue-rotate(90deg);
      transform: translate(-2px, 2px);
    }

    40% {
      filter: hue-rotate(180deg);
      transform: translate(-2px, -2px);
    }

    60% {
      filter: hue-rotate(270deg);
      transform: translate(2px, 2px);
    }

    80% {
      filter: hue-rotate(360deg);
      transform: translate(2px, -2px);
    }
  }

  @keyframes holographicShine {
    0% {
      background-position: -200% 0;
    }

    100% {
      background-position: 200% 0;
    }
  }

  @keyframes particleFloat {
    0%, 100% {
      opacity: .7;
      transform: translateY(0)translateX(0)rotate(0);
    }

    25% {
      opacity: 1;
      transform: translateY(-20px)translateX(10px)rotate(90deg);
    }

    50% {
      opacity: .8;
      transform: translateY(-40px)translateX(-5px)rotate(180deg);
    }

    75% {
      opacity: .9;
      transform: translateY(-20px)translateX(-10px)rotate(270deg);
    }
  }

  @keyframes quantumShift {
    0%, 100% {
      transform: translateZ(0)rotateX(0)rotateY(0);
      box-shadow: 0 0 20px #a855f780;
    }

    25% {
      transform: translateZ(20px)rotateX(10deg)rotateY(10deg);
      box-shadow: 0 0 40px #14b8a6b3;
    }

    50% {
      transform: translateZ(40px)rotateX(0)rotateY(20deg);
      box-shadow: 0 0 60px #8b5cf699;
    }

    75% {
      transform: translateZ(20px)rotateX(-10deg)rotateY(10deg);
      box-shadow: 0 0 40px #06b6d4cc;
    }
  }

  .animate-mindFlow {
    animation: 6s ease-in-out infinite mindFlow;
  }

  .animate-thoughtRipple {
    animation: 4s ease-in-out infinite thoughtRipple;
  }

  .animate-synapseGlow {
    animation: 3s ease-in-out infinite synapseGlow;
  }

  .animate-neuralPulse {
    animation: 2s ease-in-out infinite neuralPulse;
  }

  .animate-floatingThought {
    animation: 8s ease-in-out infinite floatingThought;
  }

  .animate-fadeInUp {
    animation: .8s ease-out forwards fadeInUp;
  }

  .animate-slideInRight {
    animation: .8s ease-out forwards slideInRight;
  }

  .animate-slideInLeft {
    animation: .8s ease-out forwards slideInLeft;
  }

  .animate-morphingButton {
    animation: 4s ease-in-out infinite morphingButton;
  }

  .animate-zoomPulse {
    animation: 3s ease-in-out infinite zoomPulse;
  }

  .animate-liquidMorph {
    animation: 6s ease-in-out infinite liquidMorph;
  }

  .animate-prismaticShift {
    animation: 8s linear infinite prismaticShift;
  }

  .animate-magneticHover {
    transition: transform .3s;
  }

  .animate-textGlitch {
    animation: 2s infinite textGlitch;
  }

  .animate-holographicShine {
    background: linear-gradient(90deg, #0000, #fff6, #0000) 0 0 / 200% 100%;
    animation: 2s infinite holographicShine;
  }

  .animate-particleFloat {
    animation: 4s ease-in-out infinite particleFloat;
  }

  .animate-quantumShift {
    transform-style: preserve-3d;
    animation: 5s ease-in-out infinite quantumShift;
  }

  .magnetic-hover {
    transition: transform .3s cubic-bezier(.175, .885, .32, 1.275);
  }

  .magnetic-hover:hover {
    filter: drop-shadow(0 20px 40px #a855f766);
    transform: translateY(-10px)scale(1.05);
  }

  .holographic-text {
    background: linear-gradient(45deg, #a855f7, #14b8a6, #8b5cf6, #06b6d4, #a855f7) 0 0 / 300% 300%;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: 6s ease-in-out infinite prismaticShift;
  }

  .holographic-safe {
    background: linear-gradient(45deg, #a855f7, #14b8a6, #8b5cf6, #06b6d4, #a855f7) 0 0 / 300% 300%;
    color: #e2e8f0;
    background-clip: text;
    animation: 6s ease-in-out infinite prismaticShift;
  }

  .glass-morphism {
    -webkit-backdrop-filter: blur(20px);
    backdrop-filter: blur(20px);
    background: #ffffff1a;
    border: 1px solid #fff3;
    box-shadow: 0 8px 32px #0000004d, inset 0 1px #fff3;
  }

  .neon-glow {
    text-shadow: 0 0 5px, 0 0 10px, 0 0 15px, 0 0 20px;
  }

  .interactive-card {
    transition: all .4s cubic-bezier(.175, .885, .32, 1.275);
  }

  .interactive-card:hover {
    transform: translateY(-15px)scale(1.03)perspective(1000px)rotateX(10deg);
    box-shadow: 0 25px 50px #a855f74d, 0 0 0 1px #ffffff1a, inset 0 1px #fff3;
  }

  .scroll-reveal {
    opacity: 0;
    transition: all .8s cubic-bezier(.175, .885, .32, 1.275);
    transform: translateY(50px);
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  .magnetic-button {
    transition: transform .3s;
    position: relative;
  }

  .magnetic-button:before {
    content: "";
    border-radius: inherit;
    opacity: 0;
    pointer-events: none;
    background: conic-gradient(#0000, #a855f71a, #0000);
    transition: opacity .3s;
    animation: 3s linear infinite spin;
    position: absolute;
    inset: -20px;
  }

  .magnetic-button:hover:before {
    opacity: 1;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  .parallax-slow {
    transform: translateZ(-1px)scale(2);
  }

  .parallax-fast {
    transform: translateZ(-2px)scale(3);
  }

  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }

    *, :before, :after {
      transition-duration: .01ms !important;
      animation-duration: .01ms !important;
      animation-iteration-count: 1 !important;
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .-inset-2 {
    inset: calc(var(--spacing) * -2);
  }

  .-inset-3 {
    inset: calc(var(--spacing) * -3);
  }

  .-inset-4 {
    inset: calc(var(--spacing) * -4);
  }

  .-inset-6 {
    inset: calc(var(--spacing) * -6);
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .-top-4 {
    top: calc(var(--spacing) * -4);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-1\/3 {
    top: 33.3333%;
  }

  .top-1\/4 {
    top: 25%;
  }

  .top-1\/5 {
    top: 20%;
  }

  .top-1\/6 {
    top: 16.6667%;
  }

  .top-1\/8 {
    top: 12.5%;
  }

  .top-2\/3 {
    top: 66.6667%;
  }

  .top-3\/4 {
    top: 75%;
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-20 {
    top: calc(var(--spacing) * 20);
  }

  .top-32 {
    top: calc(var(--spacing) * 32);
  }

  .-right-4 {
    right: calc(var(--spacing) * -4);
  }

  .right-1\/2 {
    right: 50%;
  }

  .right-1\/3 {
    right: 33.3333%;
  }

  .right-1\/4 {
    right: 25%;
  }

  .right-1\/5 {
    right: 20%;
  }

  .right-1\/6 {
    right: 16.6667%;
  }

  .right-1\/8 {
    right: 12.5%;
  }

  .right-1\/12 {
    right: 8.33333%;
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-32 {
    right: calc(var(--spacing) * 32);
  }

  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }

  .bottom-1\/2 {
    bottom: 50%;
  }

  .bottom-1\/3 {
    bottom: 33.3333%;
  }

  .bottom-1\/4 {
    bottom: 25%;
  }

  .bottom-1\/5 {
    bottom: 20%;
  }

  .bottom-1\/6 {
    bottom: 16.6667%;
  }

  .bottom-1\/8 {
    bottom: 12.5%;
  }

  .bottom-2\/3 {
    bottom: 66.6667%;
  }

  .bottom-32 {
    bottom: calc(var(--spacing) * 32);
  }

  .-left-6 {
    left: calc(var(--spacing) * -6);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-1\/3 {
    left: 33.3333%;
  }

  .left-1\/4 {
    left: 25%;
  }

  .left-1\/5 {
    left: 20%;
  }

  .left-1\/6 {
    left: 16.6667%;
  }

  .left-1\/7 {
    left: 14.2857%;
  }

  .left-1\/8 {
    left: 12.5%;
  }

  .left-1\/12 {
    left: 8.33333%;
  }

  .left-20 {
    left: calc(var(--spacing) * 20);
  }

  .left-32 {
    left: calc(var(--spacing) * 32);
  }

  .z-0 {
    z-index: 0;
  }

  .z-10 {
    z-index: 10;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .mx-auto {
    margin-inline: auto;
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .field-sizing-content {
    field-sizing: content;
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .h-80 {
    height: calc(var(--spacing) * 80);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-1 {
    width: calc(var(--spacing) * 1);
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-80 {
    width: calc(var(--spacing) * 80);
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .w-px {
    width: 1px;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-6xl {
    max-width: var(--container-6xl);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .resize-none {
    resize: none;
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }

  .border-input {
    border-color: var(--input);
  }

  .border-purple-500\/30 {
    border-color: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/30 {
      border-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
    }
  }

  .border-purple-500\/50 {
    border-color: color-mix(in srgb, oklch(.627 .265 303.9) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/50 {
      border-color: color-mix(in oklab, var(--color-purple-500) 50%, transparent);
    }
  }

  .border-slate-600 {
    border-color: var(--color-slate-600);
  }

  .border-slate-700 {
    border-color: var(--color-slate-700);
  }

  .border-slate-700\/50 {
    border-color: color-mix(in srgb, oklch(.372 .044 257.287) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-slate-700\/50 {
      border-color: color-mix(in oklab, var(--color-slate-700) 50%, transparent);
    }
  }

  .border-slate-800 {
    border-color: var(--color-slate-800);
  }

  .border-teal-400\/50 {
    border-color: color-mix(in srgb, oklch(.777 .152 181.912) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-teal-400\/50 {
      border-color: color-mix(in oklab, var(--color-teal-400) 50%, transparent);
    }
  }

  .border-teal-500\/30 {
    border-color: color-mix(in srgb, oklch(.704 .14 182.503) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-teal-500\/30 {
      border-color: color-mix(in oklab, var(--color-teal-500) 30%, transparent);
    }
  }

  .border-teal-500\/50 {
    border-color: color-mix(in srgb, oklch(.704 .14 182.503) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-teal-500\/50 {
      border-color: color-mix(in oklab, var(--color-teal-500) 50%, transparent);
    }
  }

  .border-transparent {
    border-color: #0000;
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-input-background {
    background-color: var(--input-background);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-purple-300\/35 {
    background-color: color-mix(in srgb, oklch(.827 .119 306.383) 35%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-300\/35 {
      background-color: color-mix(in oklab, var(--color-purple-300) 35%, transparent);
    }
  }

  .bg-purple-300\/40 {
    background-color: color-mix(in srgb, oklch(.827 .119 306.383) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-300\/40 {
      background-color: color-mix(in oklab, var(--color-purple-300) 40%, transparent);
    }
  }

  .bg-purple-400\/30 {
    background-color: color-mix(in srgb, oklch(.714 .203 305.504) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-400\/30 {
      background-color: color-mix(in oklab, var(--color-purple-400) 30%, transparent);
    }
  }

  .bg-purple-400\/35 {
    background-color: color-mix(in srgb, oklch(.714 .203 305.504) 35%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-400\/35 {
      background-color: color-mix(in oklab, var(--color-purple-400) 35%, transparent);
    }
  }

  .bg-purple-400\/60 {
    background-color: color-mix(in srgb, oklch(.714 .203 305.504) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-400\/60 {
      background-color: color-mix(in oklab, var(--color-purple-400) 60%, transparent);
    }
  }

  .bg-purple-500\/30 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/30 {
      background-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
    }
  }

  .bg-purple-500\/40 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/40 {
      background-color: color-mix(in oklab, var(--color-purple-500) 40%, transparent);
    }
  }

  .bg-purple-900\/50 {
    background-color: color-mix(in srgb, oklch(.381 .176 304.987) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-900\/50 {
      background-color: color-mix(in oklab, var(--color-purple-900) 50%, transparent);
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-slate-700 {
    background-color: var(--color-slate-700);
  }

  .bg-slate-800 {
    background-color: var(--color-slate-800);
  }

  .bg-slate-800\/50 {
    background-color: color-mix(in srgb, oklch(.279 .041 260.031) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-800\/50 {
      background-color: color-mix(in oklab, var(--color-slate-800) 50%, transparent);
    }
  }

  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }

  .bg-slate-900\/50 {
    background-color: color-mix(in srgb, oklch(.208 .042 265.755) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-900\/50 {
      background-color: color-mix(in oklab, var(--color-slate-900) 50%, transparent);
    }
  }

  .bg-slate-950 {
    background-color: var(--color-slate-950);
  }

  .bg-slate-950\/80 {
    background-color: color-mix(in srgb, oklch(.129 .042 264.695) 80%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-950\/80 {
      background-color: color-mix(in oklab, var(--color-slate-950) 80%, transparent);
    }
  }

  .bg-teal-300\/30 {
    background-color: color-mix(in srgb, oklch(.855 .138 181.071) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-300\/30 {
      background-color: color-mix(in oklab, var(--color-teal-300) 30%, transparent);
    }
  }

  .bg-teal-300\/60 {
    background-color: color-mix(in srgb, oklch(.855 .138 181.071) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-300\/60 {
      background-color: color-mix(in oklab, var(--color-teal-300) 60%, transparent);
    }
  }

  .bg-teal-400\/25 {
    background-color: color-mix(in srgb, oklch(.777 .152 181.912) 25%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-400\/25 {
      background-color: color-mix(in oklab, var(--color-teal-400) 25%, transparent);
    }
  }

  .bg-teal-400\/35 {
    background-color: color-mix(in srgb, oklch(.777 .152 181.912) 35%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-400\/35 {
      background-color: color-mix(in oklab, var(--color-teal-400) 35%, transparent);
    }
  }

  .bg-teal-400\/60 {
    background-color: color-mix(in srgb, oklch(.777 .152 181.912) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-400\/60 {
      background-color: color-mix(in oklab, var(--color-teal-400) 60%, transparent);
    }
  }

  .bg-teal-500\/20 {
    background-color: color-mix(in srgb, oklch(.704 .14 182.503) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-500\/20 {
      background-color: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
    }
  }

  .bg-teal-500\/40 {
    background-color: color-mix(in srgb, oklch(.704 .14 182.503) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-500\/40 {
      background-color: color-mix(in oklab, var(--color-teal-500) 40%, transparent);
    }
  }

  .bg-teal-900\/50 {
    background-color: color-mix(in srgb, oklch(.386 .063 188.416) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-teal-900\/50 {
      background-color: color-mix(in oklab, var(--color-teal-900) 50%, transparent);
    }
  }

  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-bl {
    --tw-gradient-position: to bottom left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-tr {
    --tw-gradient-position: to top right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-purple-400 {
    --tw-gradient-from: var(--color-purple-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-400\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.714 .203 305.504) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-400\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-400) 50%, transparent);
    }
  }

  .from-purple-400\/\[0\.02\] {
    --tw-gradient-from: color-mix(in srgb, oklch(.714 .203 305.504) 2%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-400\/\[0\.02\] {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-400) 2%, transparent);
    }
  }

  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-500\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .from-purple-500\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
    }
  }

  .from-purple-500\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 40%, transparent);
    }
  }

  .from-purple-500\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 50%, transparent);
    }
  }

  .from-purple-500\/\[0\.03\] {
    --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 3%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/\[0\.03\] {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 3%, transparent);
    }
  }

  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-900\/80 {
    --tw-gradient-from: color-mix(in srgb, oklch(.381 .176 304.987) 80%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-900\/80 {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-900) 80%, transparent);
    }
  }

  .from-purple-900\/\[0\.02\] {
    --tw-gradient-from: color-mix(in srgb, oklch(.381 .176 304.987) 2%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-900\/\[0\.02\] {
      --tw-gradient-from: color-mix(in oklab, var(--color-purple-900) 2%, transparent);
    }
  }

  .from-slate-700 {
    --tw-gradient-from: var(--color-slate-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-900 {
    --tw-gradient-from: var(--color-slate-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-950 {
    --tw-gradient-from: var(--color-slate-950);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-950\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(.129 .042 264.695) 95%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-slate-950\/95 {
      --tw-gradient-from: color-mix(in oklab, var(--color-slate-950) 95%, transparent);
    }
  }

  .from-teal-400 {
    --tw-gradient-from: var(--color-teal-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-teal-500\/10 {
    --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-teal-500\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 10%, transparent);
    }
  }

  .from-teal-500\/30 {
    --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-teal-500\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 30%, transparent);
    }
  }

  .from-teal-500\/40 {
    --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-teal-500\/40 {
      --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 40%, transparent);
    }
  }

  .from-teal-500\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-teal-500\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 50%, transparent);
    }
  }

  .from-teal-500\/\[0\.03\] {
    --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 3%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-teal-500\/\[0\.03\] {
      --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 3%, transparent);
    }
  }

  .from-teal-600 {
    --tw-gradient-from: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-purple-400\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.714 .203 305.504) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-400\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-400) 20%, transparent);
    }
  }

  .via-purple-950\/80 {
    --tw-gradient-via: color-mix(in srgb, oklch(.291 .149 302.717) 80%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-950\/80 {
      --tw-gradient-via: color-mix(in oklab, var(--color-purple-950) 80%, transparent);
    }
  }

  .via-slate-900 {
    --tw-gradient-via: var(--color-slate-900);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-teal-400\/20 {
    --tw-gradient-via: color-mix(in srgb, oklch(.777 .152 181.912) 20%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-teal-400\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--color-teal-400) 20%, transparent);
    }
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-purple-400 {
    --tw-gradient-to: var(--color-purple-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .to-purple-500\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.627 .265 303.9) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
    }
  }

  .to-purple-500\/40 {
    --tw-gradient-to: color-mix(in srgb, oklch(.627 .265 303.9) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/40 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-500) 40%, transparent);
    }
  }

  .to-purple-600 {
    --tw-gradient-to: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-700 {
    --tw-gradient-to: var(--color-purple-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-700\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.496 .265 301.924) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-700\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-purple-700) 50%, transparent);
    }
  }

  .to-slate-800 {
    --tw-gradient-to: var(--color-slate-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-900 {
    --tw-gradient-to: var(--color-slate-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-slate-950 {
    --tw-gradient-to: var(--color-slate-950);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-400 {
    --tw-gradient-to: var(--color-teal-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-400\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.777 .152 181.912) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-400\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-400) 50%, transparent);
    }
  }

  .to-teal-500 {
    --tw-gradient-to: var(--color-teal-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-500\/10 {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 10%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-500\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 10%, transparent);
    }
  }

  .to-teal-500\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-500\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 30%, transparent);
    }
  }

  .to-teal-500\/40 {
    --tw-gradient-to: color-mix(in srgb, oklch(.704 .14 182.503) 40%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-500\/40 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-500) 40%, transparent);
    }
  }

  .to-teal-600 {
    --tw-gradient-to: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-700\/50 {
    --tw-gradient-to: color-mix(in srgb, oklch(.511 .096 186.391) 50%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-700\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-700) 50%, transparent);
    }
  }

  .to-teal-900\/\[0\.02\] {
    --tw-gradient-to: color-mix(in srgb, oklch(.386 .063 188.416) 2%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-900\/\[0\.02\] {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-900) 2%, transparent);
    }
  }

  .to-teal-950\/90 {
    --tw-gradient-to: color-mix(in srgb, oklch(.277 .046 192.524) 90%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-950\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-950) 90%, transparent);
    }
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .object-cover {
    object-fit: cover;
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-serif {
    font-family: var(--font-serif);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }

  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-purple-200\/15 {
    color: color-mix(in srgb, oklch(.902 .063 306.703) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-200\/15 {
      color: color-mix(in oklab, var(--color-purple-200) 15%, transparent);
    }
  }

  .text-purple-200\/40 {
    color: color-mix(in srgb, oklch(.902 .063 306.703) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-200\/40 {
      color: color-mix(in oklab, var(--color-purple-200) 40%, transparent);
    }
  }

  .text-purple-300 {
    color: var(--color-purple-300);
  }

  .text-purple-300\/15 {
    color: color-mix(in srgb, oklch(.827 .119 306.383) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-300\/15 {
      color: color-mix(in oklab, var(--color-purple-300) 15%, transparent);
    }
  }

  .text-purple-300\/50 {
    color: color-mix(in srgb, oklch(.827 .119 306.383) 50%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-300\/50 {
      color: color-mix(in oklab, var(--color-purple-300) 50%, transparent);
    }
  }

  .text-purple-400 {
    color: var(--color-purple-400);
  }

  .text-purple-400\/15 {
    color: color-mix(in srgb, oklch(.714 .203 305.504) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-400\/15 {
      color: color-mix(in oklab, var(--color-purple-400) 15%, transparent);
    }
  }

  .text-purple-400\/60 {
    color: color-mix(in srgb, oklch(.714 .203 305.504) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-purple-400\/60 {
      color: color-mix(in oklab, var(--color-purple-400) 60%, transparent);
    }
  }

  .text-red-400 {
    color: var(--color-red-400);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-slate-100 {
    color: var(--color-slate-100);
  }

  .text-slate-200 {
    color: var(--color-slate-200);
  }

  .text-slate-300 {
    color: var(--color-slate-300);
  }

  .text-slate-400 {
    color: var(--color-slate-400);
  }

  .text-slate-500 {
    color: var(--color-slate-500);
  }

  .text-teal-200\/15 {
    color: color-mix(in srgb, oklch(.91 .096 180.426) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-teal-200\/15 {
      color: color-mix(in oklab, var(--color-teal-200) 15%, transparent);
    }
  }

  .text-teal-200\/25 {
    color: color-mix(in srgb, oklch(.91 .096 180.426) 25%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-teal-200\/25 {
      color: color-mix(in oklab, var(--color-teal-200) 25%, transparent);
    }
  }

  .text-teal-300 {
    color: var(--color-teal-300);
  }

  .text-teal-300\/15 {
    color: color-mix(in srgb, oklch(.855 .138 181.071) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-teal-300\/15 {
      color: color-mix(in oklab, var(--color-teal-300) 15%, transparent);
    }
  }

  .text-teal-300\/30 {
    color: color-mix(in srgb, oklch(.855 .138 181.071) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-teal-300\/30 {
      color: color-mix(in oklab, var(--color-teal-300) 30%, transparent);
    }
  }

  .text-teal-400 {
    color: var(--color-teal-400);
  }

  .text-teal-400\/15 {
    color: color-mix(in srgb, oklch(.777 .152 181.912) 15%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-teal-400\/15 {
      color: color-mix(in oklab, var(--color-teal-400) 15%, transparent);
    }
  }

  .text-teal-400\/60 {
    color: color-mix(in srgb, oklch(.777 .152 181.912) 60%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-teal-400\/60 {
      color: color-mix(in oklab, var(--color-teal-400) 60%, transparent);
    }
  }

  .text-white {
    color: var(--color-white);
  }

  .text-white\/90 {
    color: #ffffffe6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/90 {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }

  .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .italic {
    font-style: italic;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-70 {
    opacity: .7;
  }

  .opacity-75 {
    opacity: .75;
  }

  .opacity-\[0\.02\] {
    opacity: .02;
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur-xl {
    --tw-blur: blur(var(--blur-xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .delay-300 {
    transition-delay: .3s;
  }

  .delay-500 {
    transition-delay: .5s;
  }

  .delay-700 {
    transition-delay: .7s;
  }

  .delay-1000 {
    transition-delay: 1s;
  }

  .delay-1500 {
    transition-delay: 1.5s;
  }

  .delay-2000 {
    transition-delay: 2s;
  }

  .delay-3000 {
    transition-delay: 3s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .delay-300 {
    animation-delay: .3s;
  }

  .delay-500 {
    animation-delay: .5s;
  }

  .delay-700 {
    animation-delay: .7s;
  }

  .delay-1000 {
    animation-delay: 1s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .delay-1500 {
    animation-delay: 1.5s;
  }

  .delay-2000 {
    animation-delay: 2s;
  }

  .delay-3000 {
    animation-delay: 3s;
  }

  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-105:is(:where(.group):hover *) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-purple-300:is(:where(.group):hover *) {
      color: var(--color-purple-300);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-purple-400:is(:where(.group):hover *) {
      color: var(--color-purple-400);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-70:is(:where(.group):hover *) {
      opacity: .7;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-90:is(:where(.group):hover *) {
      opacity: .9;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }

  .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
    opacity: .5;
  }

  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }

  .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
    opacity: .5;
  }

  .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
    background-color: var(--primary);
  }

  .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
    color: var(--primary-foreground);
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  .placeholder\:text-slate-500::placeholder {
    color: var(--color-slate-500);
  }

  @media (hover: hover) {
    .hover\:-translate-y-2:hover {
      --tw-translate-y: calc(var(--spacing) * -2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-purple-400:hover {
      border-color: var(--color-purple-400);
    }
  }

  @media (hover: hover) {
    .hover\:border-slate-500:hover {
      border-color: var(--color-slate-500);
    }
  }

  @media (hover: hover) {
    .hover\:border-teal-300:hover {
      border-color: var(--color-teal-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-teal-400:hover {
      border-color: var(--color-teal-400);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-900\/50:hover {
      background-color: color-mix(in srgb, oklch(.381 .176 304.987) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-purple-900\/50:hover {
        background-color: color-mix(in oklab, var(--color-purple-900) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-800:hover {
      background-color: var(--color-slate-800);
    }
  }

  @media (hover: hover) {
    .hover\:bg-teal-900\/50:hover {
      background-color: color-mix(in srgb, oklch(.386 .063 188.416) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-teal-900\/50:hover {
        background-color: color-mix(in oklab, var(--color-teal-900) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-teal-950\/50:hover {
      background-color: color-mix(in srgb, oklch(.277 .046 192.524) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-teal-950\/50:hover {
        background-color: color-mix(in oklab, var(--color-teal-950) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:from-purple-700:hover {
      --tw-gradient-from: var(--color-purple-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-teal-700:hover {
      --tw-gradient-from: var(--color-teal-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-purple-700:hover {
      --tw-gradient-to: var(--color-purple-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-purple-800:hover {
      --tw-gradient-to: var(--color-purple-800);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-teal-700:hover {
      --tw-gradient-to: var(--color-teal-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-purple-300:hover {
      color: var(--color-purple-300);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-purple-500\/10:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-purple-500\/10:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-500) 10%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:shadow-purple-500\/25:hover {
      --tw-shadow-color: color-mix(in srgb, oklch(.627 .265 303.9) 25%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-purple-500\/25:hover {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-500) 25%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }

  .focus\:border-purple-400:focus {
    border-color: var(--color-purple-400);
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (width >= 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }
}

:root {
  --font-size: 16px;
  --background: #fff;
  --foreground: oklch(.145 0 0);
  --card: #fff;
  --card-foreground: oklch(.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(.145 0 0);
  --primary: #030213;
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(.95 .0058 264.53);
  --secondary-foreground: #030213;
  --muted: #ececf0;
  --muted-foreground: #717182;
  --accent: #e9ebef;
  --accent-foreground: #030213;
  --destructive: #d4183d;
  --destructive-foreground: #fff;
  --border: #0000001a;
  --input: transparent;
  --input-background: #f3f3f5;
  --switch-background: #cbced4;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --ring: oklch(.708 0 0);
  --chart-1: oklch(.646 .222 41.116);
  --chart-2: oklch(.6 .118 184.704);
  --chart-3: oklch(.398 .07 227.392);
  --chart-4: oklch(.828 .189 84.429);
  --chart-5: oklch(.769 .188 70.08);
  --radius: .625rem;
  --sidebar: oklch(.985 0 0);
  --sidebar-foreground: oklch(.145 0 0);
  --sidebar-primary: #030213;
  --sidebar-primary-foreground: oklch(.985 0 0);
  --sidebar-accent: oklch(.97 0 0);
  --sidebar-accent-foreground: oklch(.205 0 0);
  --sidebar-border: oklch(.922 0 0);
  --sidebar-ring: oklch(.708 0 0);
}

.dark {
  --background: oklch(.145 0 0);
  --foreground: oklch(.985 0 0);
  --card: oklch(.145 0 0);
  --card-foreground: oklch(.985 0 0);
  --popover: oklch(.145 0 0);
  --popover-foreground: oklch(.985 0 0);
  --primary: oklch(.985 0 0);
  --primary-foreground: oklch(.205 0 0);
  --secondary: oklch(.269 0 0);
  --secondary-foreground: oklch(.985 0 0);
  --muted: oklch(.269 0 0);
  --muted-foreground: oklch(.708 0 0);
  --accent: oklch(.269 0 0);
  --accent-foreground: oklch(.985 0 0);
  --destructive: oklch(.396 .141 25.723);
  --destructive-foreground: oklch(.637 .237 25.331);
  --border: oklch(.269 0 0);
  --input: oklch(.269 0 0);
  --ring: oklch(.439 0 0);
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --chart-1: oklch(.488 .243 264.376);
  --chart-2: oklch(.696 .17 162.48);
  --chart-3: oklch(.769 .188 70.08);
  --chart-4: oklch(.627 .265 303.9);
  --chart-5: oklch(.645 .246 16.439);
  --sidebar: oklch(.205 0 0);
  --sidebar-foreground: oklch(.985 0 0);
  --sidebar-primary: oklch(.488 .243 264.376);
  --sidebar-primary-foreground: oklch(.985 0 0);
  --sidebar-accent: oklch(.269 0 0);
  --sidebar-accent-foreground: oklch(.985 0 0);
  --sidebar-border: oklch(.269 0 0);
  --sidebar-ring: oklch(.439 0 0);
}

html {
  font-size: var(--font-size);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
